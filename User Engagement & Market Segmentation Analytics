WITH
  account_metrics AS (-- Рахуємо кількість акаунтів по країнах
  SELECT
    s.date AS date,
    sp.country AS country,
    a.send_interval AS send_interval,
    a.is_verified AS is_verified,
    a.is_unsubscribed AS is_unsubscribed,
    COUNT(DISTINCT a.id) AS account_cnt,
    0 AS sent_msg,
    0 AS open_msg,
    0 AS visit_msg
  FROM
    `DA.account` a
  JOIN
    `DA.account_session` acs
  ON
    a.id = acs.account_id
  JOIN
    `DA.session` s
  ON
    acs.ga_session_id = s.ga_session_id
  JOIN
    `DA.session_params` sp
  ON
    s.ga_session_id = sp.ga_session_id
  GROUP BY
    1,
    2,
    3,
    4,
    5 ),
  email_metrics AS ( -- Рахуємо листи по країнах
  SELECT
    DATE_ADD(s.date, INTERVAL ems.sent_date DAY) AS date,
    sp.country AS country,
    a.send_interval AS send_interval,
    a.is_verified AS is_verified,
    a.is_unsubscribed AS is_unsubscribed,
    0 AS account_cnt,
    COUNT(DISTINCT ems.id_message) AS sent_msg,
    COUNT(DISTINCT eo.id_message) AS open_msg,
    COUNT(DISTINCT ev.id_message) AS visit_msg
  FROM
    `DA.email_sent` ems
  JOIN
    `DA.account_session` acs
  ON
    ems.id_account = acs.account_id
  JOIN
    `DA.session` s
  ON
    acs.ga_session_id = s.ga_session_id
  LEFT JOIN
    `DA.email_open` eo
  ON
    ems.id_message = eo.id_message
  LEFT JOIN
    `DA.email_visit` ev
  ON
    ems.id_message = ev.id_message
  JOIN
    `DA.session_params` sp
  ON
    s.ga_session_id = sp.ga_session_id
  JOIN
    `DA.account` a
  ON
    ems.id_account = a.id
  GROUP BY
    1,
    2,
    3,
    4,
    5,
    6 ),
  metrics AS ( -- Об'єднуємо дві окремі метрики через
  UNION ALL
  SELECT
    *
  FROM
    account_metrics
  UNION ALL
  SELECT
    *
  FROM
    email_metrics ),
  country_totals AS ( -- Підрахунок загальної кількості акаунтів та листів по країнах
  SELECT
    date,
    country,
    send_interval,
    is_verified,
    is_unsubscribed,
    SUM(account_cnt) AS account_cnt,
    SUM(sent_msg) AS sent_msg,
    SUM(open_msg) AS open_msg,
    SUM(visit_msg) AS visit_msg,
    SUM(SUM(account_cnt)) OVER (PARTITION BY country) AS total_country_account_cnt,
    SUM(SUM(sent_msg)) OVER (PARTITION BY country) AS total_country_sent_cnt
  FROM
    metrics
  GROUP BY
    1,
    2,
    3,
    4,
    5 ),
  ranking_countries AS (
  SELECT
    date,
    country,
    send_interval,
    is_verified,
    is_unsubscribed,
    account_cnt,
    sent_msg,
    open_msg,
    visit_msg,
    total_country_account_cnt,
    total_country_sent_cnt,
    DENSE_RANK() OVER (ORDER BY total_country_account_cnt DESC) AS rank_total_country_account_cnt,
    DENSE_RANK() OVER (ORDER BY total_country_sent_cnt DESC) AS rank_total_country_sent_cnt
  FROM
    country_totals )
SELECT
  *
FROM
  ranking_countries r
WHERE
  r.rank_total_country_account_cnt <= 10
  OR r.rank_total_country_sent_cnt <= 10
ORDER BY
  date,
  r.rank_total_country_account_cnt,
  r.rank_total_country_sent_cnt;
